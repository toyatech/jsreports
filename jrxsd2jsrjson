#!/usr/local/bin/node

var fs = require('fs')
  , _ = require('underscore')
  , parser  = require('xml2json');

var filename = 'jasperreport.xsd';

var xsd = fs.readFileSync(filename);

var obj = parser.toJson(xsd, { object: true });

var jsd = {};

var names = {
  jasperReport: 'report'
}

var skips = ['import'];

var transformations = {
  schema: function(schema, jsd, next) {
    jsd['definitions'] = {};
    next(schema, jsd);
  },
  element: function(element, jsd, next) {

    if (_.isArray(element)) {
      _.forEach(element, function(element) {
        transformations.element.call(this, element);
      });
    }

    // name element
    if (_.has(element, 'name')) {  
    }

  },
  complexType: function(complexType, jsd, next) {
    next(complexType, jsd);
  },
  sequence: function(sequence, jsd, next) {
    next(sequence, jsd);
  }
}

function capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

function formatName(name) {
  return _.has(names, name) ? capitalize(names[name]) : capitalize(name);
}

function transform(obj, jsd) {
  _.forEach(obj, function(value, key) {
    if (_.has(transformations, key)) {
      transformations[key].call(this, value, jsd, function(value, jsd) {
        if (_.isObject(value)) {
          transform(value, jsd);
        }
      });
    }
  });
}

transform(obj, jsd);

console.log(JSON.stringify(jsd, null, 2));
