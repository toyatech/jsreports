#!/usr/local/bin/node

var fs = require('fs')
  , _ = require('lodash')
  , parser = require('xml2json')
  , pluralize = require('pluralize');

_.mixin(require('lodash-deep'));
_.mixin({
  capitalize: function(string) {
    return string.charAt(0).toUpperCase() + string.substring(1);
  },
  pluralize: pluralize
});

var structure = {
  Program: {
    type: 'Program',
    body: []
  },
  VariableDeclaration: {
    type: "VariableDeclaration",
    declarations: [],
    kind: "var"
  },
  ModelDeclarator: { 
    type: "VariableDeclarator",
    id: {
      type: "Identifier",
      name: "Name"
    },
    init: {
      type: "CallExpression",
      callee: {
        type: "MemberExpression",
        computed: false,
        object: {
          type: "MemberExpression",
          computed: false,
          object: {
            type: "Identifier",
            name: "Backbone"
          },
          property: {
            type: "Identifier",
            name: "Model"
          }
        },
        property: {
          type: "Identifier",
          name: "extend"
        }
      },
      arguments: [
        {
          type: "ObjectExpression",
          properties: []
        }
      ]
    }
  } 
}

function addModelDeclarator(name) {
  var o = _.extend({}, structure.ModelDeclarator);
  o.id.name = (name);
  return o;
}

var schema = require('./jsreports-schema.json');

var jsreports = _.extend({}, structure.Program);

jsreports.body.push(_.extend({}, structure.VariableDeclaration));

var declarations = [];

_.each(_.keys(schema.definitions), function(key) {
  var o = addModelDeclarator(key);
  jsreports.body[0].declarations.push(o);
});

jsreports.body[0].declarations = declarations;

console.log(JSON.stringify(jsreports, null, 2));
